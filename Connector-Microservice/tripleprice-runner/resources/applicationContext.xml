<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx 
      	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>file:resources/application.properties</value>
		</property>
	</bean>

	<bean id="nusatripKeySearchCache" class="tripleprice.cache.redis.RedisCacheChannel">
		<constructor-arg type="java.lang.String" value="nusatrip:" /><!-- 
			cache prefix -->
		<constructor-arg type="short" value="60" />
	</bean>

	<bean id="travelokaKeySearchCache" class="tripleprice.cache.redis.RedisCacheChannel">
		<constructor-arg type="java.lang.String" value="nusatrip:" /><!-- 
			cache prefix -->
		<constructor-arg type="short" value="60" />
	</bean>

	<!-- <bean id="cacheManager" class="tripleprice.cache.redis.CacheManager"> 
		<constructor-arg> <list> <ref bean="nusatripKeySearchCache" /> </list> </constructor-arg> 
		</bean> -->

	<!-- Nusatrip -->

	<bean id="nusatripConnector" class="tripleprice.flight.nusatrip.NusatripConnector"
		init-method="start" destroy-method="close">
		<constructor-arg type="java.lang.String"
			value="${nusatrip.url.flight.search.get.token}" />
		<constructor-arg type="java.lang.String"
			value="${nusatrip.url.flight.search.get.list}" />
	</bean>

	<bean id="nusatripFlightService" class="tripleprice.flight.nusatrip.NusatripFlightService">
		<constructor-arg type="java.lang.String"
			value="${nusatrip.url.flight.search.findkey}" />
	</bean>

	<!-- traveloka -->

	<bean id="travelokaConnector" class="tripleprice.flight.traveloka.TravelokaConnector"
		init-method="start" destroy-method="close">
		<constructor-arg type="java.lang.String"
			value="${traveloka.url.flight.search.oneway}" />
	</bean>

	<bean id="travelokaFlightService" class="tripleprice.flight.traveloka.TravelokaFlightService">
	</bean>

	<!-- Tiket.com -->
	<bean id="tiketComConnector" class="tripleprice.flight.tiket.com.TiketComConnector"
		init-method="start" destroy-method="close">
		<constructor-arg type="java.lang.String"
			value="${tripleprice.flight.tiket.com.search.key}" />
		<constructor-arg type="java.lang.String"
			value="${tripleprice.flight.tiket.com.search.flight.search.streaming}" />
	</bean>

	<bean id="tiketComFlightService" class="tripleprice.flight.tiket.com.TiketComFlightService">
	</bean>

	<bean id="aggregatorService" class="tripleprice.aggregator.AggregatorService">
		<constructor-arg>
			<list>
				<ref bean="nusatripFlightService" />
				<ref bean="travelokaFlightService" />
				<ref bean="tiketComFlightService" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="util" class="tripleprice.util.Util" />

	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter"
		lazy-init="false">
		<property name="beans">
			<map>
				<entry key="mytriple:type=services,name=util" value-ref="util" />
			</map>
		</property>
	</bean>

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location"> <value>../app.properties</value> </property> </bean> -->

	<!-- <bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> </bean> <bean id="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"/> <bean 
		id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="myEmf" /> </bean> <tx:annotation-driven 
		/> <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" 
		/> -->

	<!-- <bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="packagesToScan" 
		value="org.baeldung.persistence.model" /> <property name="jpaVendorAdapter"> 
		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" 
		/> </property> <property name="jpaProperties"> <props> <prop key="hibernate.hbm2ddl.auto">create-drop</prop> 
		<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop> 
		</props> </property> </bean> <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" /> <property 
		name="url" value="jdbc:mysql://localhost:3306/QIYOSQ" /> <property name="username" 
		value="root" /> <property name="password" value="root" /> </bean> <bean id="transactionManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager"> <property name="entityManagerFactory" 
		ref="myEmf" /> </bean> <tx:annotation-driven /> <bean id="persistenceExceptionTranslationPostProcessor" 
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" 
		/> -->
</beans>
